name: Auto Release

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  auto-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Get current version
        id: current_version
        run: |
          CURRENT_VERSION=$(grep -oP '<Version>\K[^<]+' SoftArchitecture.csproj)
          echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          echo "Current version: $CURRENT_VERSION"

      - name: Calculate new version
        id: new_version
        run: |
          # Get commit count for patch version
          COMMIT_COUNT=$(git rev-list --count HEAD)
          NEW_VERSION="1.0.$COMMIT_COUNT"
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "New version: $NEW_VERSION"

      - name: Update version in project file
        run: |
          # Update version in .csproj file
          sed -i "s/<Version>.*<\/Version>/<Version>${{ steps.new_version.outputs.new_version }}<\/Version>/g" SoftArchitecture.csproj
          sed -i "s/<AssemblyVersion>.*<\/AssemblyVersion>/<AssemblyVersion>${{ steps.new_version.outputs.new_version }}.0<\/AssemblyVersion>/g" SoftArchitecture.csproj
          sed -i "s/<FileVersion>.*<\/FileVersion>/<FileVersion>${{ steps.new_version.outputs.new_version }}.0<\/FileVersion>/g" SoftArchitecture.csproj

      - name: Commit version update
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add SoftArchitecture.csproj
          git commit -m "Auto-increment version to ${{ steps.new_version.outputs.new_version }}"
          git push

      - name: Create release zip
        run: |
          # Create zip file from publish folder
          cd bin/publish
          zip -r "../SoftArchitecture-v${{ steps.new_version.outputs.new_version }}.zip" .
          cd ../..

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.new_version.outputs.new_version }}
          release_name: SoftArchitecture v${{ steps.new_version.outputs.new_version }}
          body: |
            ## SoftArchitecture v${{ steps.new_version.outputs.new_version }}

            ### What's New
            - Professional project management tool for software developers

            ### Installation
            1. Download the zip file
            2. Extract the contents
            3. Run `setup.exe` to install the application

            ### System Requirements
            - Windows 10 or later
            - .NET 8.0 Runtime
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/SoftArchitecture-v${{ steps.new_version.outputs.new_version }}.zip
          asset_name: SoftArchitecture-v${{ steps.new_version.outputs.new_version }}.zip
          asset_content_type: application/zip
